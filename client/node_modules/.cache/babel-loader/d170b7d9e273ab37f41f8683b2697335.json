{"ast":null,"code":"import { createApi } from '@reduxjs/toolkit/query/react';\nimport { io } from 'socket.io-client';\nexport const stockApiSlice = createApi({\n  reducerPath: 'stockApiSlice',\n  endpoints: builder => ({\n    getStocks: builder.query({\n      queryFn: () => ({\n        data: []\n      }),\n\n      async onCacheEntryAdded(arg, _ref) {\n        let {\n          updateCachedData,\n          cacheEntryRemoved\n        } = _ref;\n        const socket = io('http://localhost:4000');\n        socket.emit('start');\n        socket.on('ticker', data => {\n          console.log(socket.io.reconnectionAttempts(1000));\n          updateCachedData(draft => {\n            draft.push(data);\n\n            if (draft.length > 1) {\n              draft.shift();\n              return draft;\n            }\n          });\n        });\n        await cacheEntryRemoved;\n      }\n\n    })\n  })\n});\nexport const {\n  useGetStocksQuery\n} = stockApiSlice;","map":{"version":3,"names":["createApi","io","stockApiSlice","reducerPath","endpoints","builder","getStocks","query","queryFn","data","onCacheEntryAdded","arg","updateCachedData","cacheEntryRemoved","socket","emit","on","console","log","reconnectionAttempts","draft","push","length","shift","useGetStocksQuery"],"sources":["/Users/g/Documents/myCodeProjects/finance-test-task/client/src/redux/stockApiSlice.js"],"sourcesContent":["import { createApi } from '@reduxjs/toolkit/query/react';\nimport { io } from 'socket.io-client';\n\nexport const stockApiSlice = createApi({\n  reducerPath: 'stockApiSlice',\n  endpoints: builder => ({\n    getStocks: builder.query({\n      queryFn: () => ({ data: [] }),\n      async onCacheEntryAdded(arg, { updateCachedData, cacheEntryRemoved }) {\n        const socket = io('http://localhost:4000')\n        socket.emit('start')\n        socket.on('ticker', (data) => {\n          console.log(socket.io.reconnectionAttempts(1000))\n          updateCachedData((draft) => {\n            draft.push(data)\n            if (draft.length > 1) {\n              draft.shift()\n              return draft\n            }\n          })\n        })\n        await cacheEntryRemoved\n      }\n    }),\n  }),\n})\n\nexport const { useGetStocksQuery } = stockApiSlice;"],"mappings":"AAAA,SAASA,SAAT,QAA0B,8BAA1B;AACA,SAASC,EAAT,QAAmB,kBAAnB;AAEA,OAAO,MAAMC,aAAa,GAAGF,SAAS,CAAC;EACrCG,WAAW,EAAE,eADwB;EAErCC,SAAS,EAAEC,OAAO,KAAK;IACrBC,SAAS,EAAED,OAAO,CAACE,KAAR,CAAc;MACvBC,OAAO,EAAE,OAAO;QAAEC,IAAI,EAAE;MAAR,CAAP,CADc;;MAEvB,MAAMC,iBAAN,CAAwBC,GAAxB,QAAsE;QAAA,IAAzC;UAAEC,gBAAF;UAAoBC;QAApB,CAAyC;QACpE,MAAMC,MAAM,GAAGb,EAAE,CAAC,uBAAD,CAAjB;QACAa,MAAM,CAACC,IAAP,CAAY,OAAZ;QACAD,MAAM,CAACE,EAAP,CAAU,QAAV,EAAqBP,IAAD,IAAU;UAC5BQ,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACb,EAAP,CAAUkB,oBAAV,CAA+B,IAA/B,CAAZ;UACAP,gBAAgB,CAAEQ,KAAD,IAAW;YAC1BA,KAAK,CAACC,IAAN,CAAWZ,IAAX;;YACA,IAAIW,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;cACpBF,KAAK,CAACG,KAAN;cACA,OAAOH,KAAP;YACD;UACF,CANe,CAAhB;QAOD,CATD;QAUA,MAAMP,iBAAN;MACD;;IAhBsB,CAAd;EADU,CAAL;AAFmB,CAAD,CAA/B;AAwBP,OAAO,MAAM;EAAEW;AAAF,IAAwBtB,aAA9B"},"metadata":{},"sourceType":"module"}