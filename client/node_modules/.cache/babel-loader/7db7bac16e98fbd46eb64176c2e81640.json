{"ast":null,"code":"var _jsxFileName = \"/Users/g/Documents/myCodeProjects/finance-test-task/client/src/components/Tickers.js\",\n    _s = $RefreshSig$();\n\nimport { useGetStocksQuery } from '../redux/stockApiSlice';\nimport { Ticker } from './Ticker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Tickers() {\n  _s();\n\n  const {\n    data,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetStocksQuery();\n\n  if (isLoading) {\n    console.log('Loading...');\n  } else if (isSuccess) {\n    console.log(data.flat());\n  } else if (isError) {\n    console.log(error);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: isSuccess ? data.flat().map((item, i) => /*#__PURE__*/_jsxDEV(Ticker, {\n      ticker: item.ticker,\n      exchange: item.exchange,\n      price: item.price,\n      change: item.change,\n      change_percent: item.change_percent\n    }, i + 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this)) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tickers, \"PYlZPnRze3nRb4/Hg/tuJhHYXHg=\", false, function () {\n  return [useGetStocksQuery];\n});\n\n_c = Tickers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tickers\");","map":{"version":3,"sources":["/Users/g/Documents/myCodeProjects/finance-test-task/client/src/components/Tickers.js"],"names":["useGetStocksQuery","Ticker","Tickers","data","isLoading","isSuccess","isError","error","console","log","flat","map","item","i","ticker","exchange","price","change","change_percent"],"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,wBAAlC;AACA,SAASC,MAAT,QAAuB,UAAvB;;AAEA,OAAO,SAASC,OAAT,GAAoB;AAAA;;AAEzB,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA;AALI,MAMFP,iBAAiB,EANrB;;AAQA,MAAII,SAAJ,EAAe;AACbI,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GAFD,MAEO,IAAIJ,SAAJ,EAAe;AACpBG,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,IAAL,EAAZ;AACD,GAFM,MAEA,IAAIJ,OAAJ,EAAa;AAClBE,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cAEIF,SAAS,GACTF,IAAI,CAACO,IAAL,GAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,kBACd,QAAC,MAAD;AAEE,MAAA,MAAM,EAAED,IAAI,CAACE,MAFf;AAGE,MAAA,QAAQ,EAAEF,IAAI,CAACG,QAHjB;AAIE,MAAA,KAAK,EAAEH,IAAI,CAACI,KAJd;AAKE,MAAA,MAAM,EAAEJ,IAAI,CAACK,MALf;AAME,MAAA,cAAc,EAAEL,IAAI,CAACM;AANvB,OACOL,CAAC,GAAG,CADX;AAAA;AAAA;AAAA;AAAA,YADF,CADS,GAYT;AAdJ;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAtCeX,O;UAQVF,iB;;;KARUE,O","sourcesContent":["import { useGetStocksQuery } from '../redux/stockApiSlice';\nimport { Ticker } from './Ticker';\n\nexport function Tickers () {\n\n  const {\n    data,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetStocksQuery()\n\n  if (isLoading) {\n    console.log('Loading...')\n  } else if (isSuccess) {\n    console.log(data.flat())\n  } else if (isError) {\n    console.log(error);\n  }\n\n  return (\n    <div className='container'>\n      {\n        isSuccess ? \n        data.flat().map((item, i) => \n          <Ticker \n            key={i + 1}\n            ticker={item.ticker}\n            exchange={item.exchange}\n            price={item.price}\n            change={item.change}\n            change_percent={item.change_percent}\n          />\n        )\n        : \n        null\n     \n     }\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}