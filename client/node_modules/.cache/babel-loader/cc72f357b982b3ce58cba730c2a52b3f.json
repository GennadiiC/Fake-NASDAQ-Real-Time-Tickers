{"ast":null,"code":"var _jsxFileName = \"/Users/g/Documents/myCodeProjects/finance-test-task/client/src/components/Tickers.js\",\n    _s = $RefreshSig$();\n\nimport { useGetStocksQuery } from '../redux/stockApiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Tickers() {\n  _s();\n\n  const {\n    data,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetStocksQuery();\n\n  if (isLoading) {\n    console.log('Loading...');\n  } else if (isSuccess) {\n    console.log(data.flat());\n  } else if (isError) {\n    console.log(error);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isSuccess ? data.flat().map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {}, i + 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this)) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tickers, \"PYlZPnRze3nRb4/Hg/tuJhHYXHg=\", false, function () {\n  return [useGetStocksQuery];\n});\n\n_c = Tickers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tickers\");","map":{"version":3,"sources":["/Users/g/Documents/myCodeProjects/finance-test-task/client/src/components/Tickers.js"],"names":["useGetStocksQuery","Tickers","data","isLoading","isSuccess","isError","error","console","log","flat","map","item","i"],"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,wBAAlC;;AAEA,OAAO,SAASC,OAAT,GAAoB;AAAA;;AAEzB,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA;AALI,MAMFN,iBAAiB,EANrB;;AAQA,MAAIG,SAAJ,EAAe;AACbI,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GAFD,MAEO,IAAIJ,SAAJ,EAAe;AACpBG,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,IAAL,EAAZ;AACD,GAFM,MAEA,IAAIJ,OAAJ,EAAa;AAClBE,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AAED,sBACE;AAAA,cAEIF,SAAS,GACTF,IAAI,CAACO,IAAL,GAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,kBACd,mBAAUA,CAAC,GAAG,CAAd;AAAA;AAAA;AAAA;AAAA,YADF,CADS,GAOT;AATJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAjCeX,O;UAQVD,iB;;;KARUC,O","sourcesContent":["import { useGetStocksQuery } from '../redux/stockApiSlice';\n\nexport function Tickers () {\n\n  const {\n    data,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetStocksQuery()\n\n  if (isLoading) {\n    console.log('Loading...')\n  } else if (isSuccess) {\n    console.log(data.flat())\n  } else if (isError) {\n    console.log(error);\n  }\n\n  return (\n    <div>\n      {\n        isSuccess ? \n        data.flat().map((item, i) => \n          <div key={i + 1}>\n          \n          </div>\n        )\n        : \n        null\n     \n     }\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}