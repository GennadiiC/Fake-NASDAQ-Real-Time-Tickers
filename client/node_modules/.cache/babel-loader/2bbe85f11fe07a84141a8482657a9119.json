{"ast":null,"code":"var _jsxFileName = \"/Users/g/Documents/myCodeProjects/finance-test-task/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { addState } from './redux/stockSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useGetStocksQuery } from './redux/stockApiSlice';\nimport { io } from 'socket.io-client';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const socket = io.connect('http://localhost:4000');\n  const dispatch = useDispatch();\n  const tickers = useSelector(state => state.stocks); // const [ stocks, setStocks ] = useState(null)\n  // const start = () => {\n  //   socket.emit('start')\n  //   socket.on('ticker', (data) => {\n  //     setStocks(data)\n  //   })\n  // }\n  // useEffect(() => {\n  //   dispatch(addState(stocks))\n  // }, [stocks])\n  // useEffect(() => {\n  //   socket.emit('start', () => console.log(socket.id))\n  //   socket.on('ticker', (data) => {\n  //     console.log(data)\n  //     dispatch(addState(data))\n  //   })\n  // }, [])\n\n  const {\n    data,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetStocksQuery();\n\n  if (isLoading) {\n    console.log('Loading...');\n  } else if (isSuccess) {\n    console.log(data);\n  } else if (isError) {\n    console.log(error);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Start!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"eUeoKhcs5XjMRPhxXRzbeAHWyag=\", false, function () {\n  return [useDispatch, useSelector, useGetStocksQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/g/Documents/myCodeProjects/finance-test-task/client/src/App.js"],"names":["addState","useSelector","useDispatch","useGetStocksQuery","io","useEffect","useState","App","socket","connect","dispatch","tickers","state","stocks","data","isLoading","isSuccess","isError","error","console","log"],"mappings":";;;;AACA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,oBAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,MAAM,GAAGJ,EAAE,CAACK,OAAH,CAAW,uBAAX,CAAf;AAEA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAMS,OAAO,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,MAAlB,CAA3B,CANa,CAQb;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA;AALI,MAMFf,iBAAiB,EANrB;;AAQA,MAAIY,SAAJ,EAAe;AACbI,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GAFD,MAEO,IAAIJ,SAAJ,EAAe;AACpBG,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACD,GAFM,MAEA,IAAIG,OAAJ,EAAa;AAClBE,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AAED,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAnDQX,G;UAIUL,W,EAEDD,W,EA8BZE,iB;;;KApCGI,G;AAqDT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { addState } from './redux/stockSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useGetStocksQuery } from './redux/stockApiSlice';\nimport { io } from 'socket.io-client';\nimport { useEffect, useState } from 'react';\n\n\n\nfunction App() {\n\n  const socket = io.connect('http://localhost:4000');\n\n  const dispatch = useDispatch()\n\n  const tickers = useSelector((state) => state.stocks)\n\n  // const [ stocks, setStocks ] = useState(null)\n\n  // const start = () => {\n  //   socket.emit('start')\n  //   socket.on('ticker', (data) => {\n  //     setStocks(data)\n  //   })\n  // }\n\n  // useEffect(() => {\n  //   dispatch(addState(stocks))\n  // }, [stocks])\n\n\n  // useEffect(() => {\n  //   socket.emit('start', () => console.log(socket.id))\n  //   socket.on('ticker', (data) => {\n  //     console.log(data)\n  //     dispatch(addState(data))\n  //   })\n  // }, [])\n\n  const {\n    data,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetStocksQuery()\n\n  if (isLoading) {\n    console.log('Loading...')\n  } else if (isSuccess) {\n    console.log(data)\n  } else if (isError) {\n    console.log(error);\n  }\n\n  return (\n    <div>\n      <button>Start!</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}