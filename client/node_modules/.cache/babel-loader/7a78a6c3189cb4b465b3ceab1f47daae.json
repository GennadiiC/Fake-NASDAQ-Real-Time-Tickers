{"ast":null,"code":"import { createApi } from '@reduxjs/toolkit/query/react';\nimport { io } from 'socket.io-client';\nexport const stockApiSlice = createApi({\n  reducerPath: 'stockApiSlice',\n  endpoints: builder => ({\n    getStocks: builder.query({\n      queryFn: () => ({\n        data: []\n      }),\n\n      async onCacheEntryAdded(arg, {\n        updateCachedData,\n        cacheEntryRemoved\n      }) {\n        const socket = io('http://localhost:4000');\n        socket.emit('start');\n        socket.on('ticker', data => {\n          updateCachedData(draft => {\n            draft.push(data);\n\n            if (draft.length > 1) {\n              draft.shift().flat();\n              return draft;\n            }\n          });\n        });\n        await cacheEntryRemoved;\n      }\n\n    })\n  })\n});\nexport const {\n  useGetStocksQuery\n} = stockApiSlice;","map":{"version":3,"sources":["/Users/g/Documents/myCodeProjects/finance-test-task/client/src/redux/stockApiSlice.js"],"names":["createApi","io","stockApiSlice","reducerPath","endpoints","builder","getStocks","query","queryFn","data","onCacheEntryAdded","arg","updateCachedData","cacheEntryRemoved","socket","emit","on","draft","push","length","shift","flat","useGetStocksQuery"],"mappings":"AAAA,SAASA,SAAT,QAA0B,8BAA1B;AACA,SAASC,EAAT,QAAmB,kBAAnB;AAEA,OAAO,MAAMC,aAAa,GAAGF,SAAS,CAAC;AACrCG,EAAAA,WAAW,EAAE,eADwB;AAErCC,EAAAA,SAAS,EAAEC,OAAO,KAAK;AACrBC,IAAAA,SAAS,EAAED,OAAO,CAACE,KAAR,CAAc;AACvBC,MAAAA,OAAO,EAAE,OAAO;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAP,CADc;;AAEvB,YAAMC,iBAAN,CAAwBC,GAAxB,EAA6B;AAAEC,QAAAA,gBAAF;AAAoBC,QAAAA;AAApB,OAA7B,EAAsE;AACpE,cAAMC,MAAM,GAAGb,EAAE,CAAC,uBAAD,CAAjB;AACAa,QAAAA,MAAM,CAACC,IAAP,CAAY,OAAZ;AACAD,QAAAA,MAAM,CAACE,EAAP,CAAU,QAAV,EAAqBP,IAAD,IAAU;AAC5BG,UAAAA,gBAAgB,CAAEK,KAAD,IAAW;AAC1BA,YAAAA,KAAK,CAACC,IAAN,CAAWT,IAAX;;AACA,gBAAIQ,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;AACpBF,cAAAA,KAAK,CAACG,KAAN,GAAcC,IAAd;AACA,qBAAOJ,KAAP;AACD;AACF,WANe,CAAhB;AAOD,SARD;AASA,cAAMJ,iBAAN;AACD;;AAfsB,KAAd;AADU,GAAL;AAFmB,CAAD,CAA/B;AAuBP,OAAO,MAAM;AAAES,EAAAA;AAAF,IAAwBpB,aAA9B","sourcesContent":["import { createApi } from '@reduxjs/toolkit/query/react';\nimport { io } from 'socket.io-client';\n\nexport const stockApiSlice = createApi({\n  reducerPath: 'stockApiSlice',\n  endpoints: builder => ({\n    getStocks: builder.query({\n      queryFn: () => ({ data: [] }),\n      async onCacheEntryAdded(arg, { updateCachedData, cacheEntryRemoved }) {\n        const socket = io('http://localhost:4000')\n        socket.emit('start')\n        socket.on('ticker', (data) => {\n          updateCachedData((draft) => {\n            draft.push(data)\n            if (draft.length > 1) {\n              draft.shift().flat()\n              return draft\n            }\n          })\n        })\n        await cacheEntryRemoved\n      }\n    }),\n  }),\n})\n\nexport const { useGetStocksQuery } = stockApiSlice;"]},"metadata":{},"sourceType":"module"}