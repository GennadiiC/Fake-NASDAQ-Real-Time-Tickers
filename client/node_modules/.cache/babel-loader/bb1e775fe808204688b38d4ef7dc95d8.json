{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst stocksSlice = createSlice({\n  name: 'stocks',\n  initialState: {\n    interval: 5000,\n    cachedTickers: [],\n    newEntry: null,\n    tickID: null\n  },\n  reducers: {\n    changeInterval: (state, action) => {\n      state.interval = action.payload;\n    },\n    setCachedTicker: (state, action) => {\n      state.cachedTickers.push(action.payload);\n    }\n  }\n});\nexport const {\n  changeInterval,\n  setCachedTicker\n} = stocksSlice.actions;\nexport default stocksSlice.reducer;","map":{"version":3,"names":["createSlice","stocksSlice","name","initialState","interval","cachedTickers","newEntry","tickID","reducers","changeInterval","state","action","payload","setCachedTicker","push","actions","reducer"],"sources":["/Users/g/Documents/myCodeProjects/finance-test-task/client/src/redux/stockSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n\nconst stocksSlice = createSlice({\n  name: 'stocks',\n  initialState: {\n    interval: 5000,\n    cachedTickers: [],\n    newEntry: null,\n    tickID: null\n\n  },\n  reducers: {\n    changeInterval: (state, action) => {\n      state.interval = action.payload\n    }, \n    setCachedTicker: (state, action) => {\n      state.cachedTickers.push(action.payload)\n    }\n  }\n})\n\n\nexport const { changeInterval, setCachedTicker } = stocksSlice.actions\nexport default stocksSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,WAAW,GAAGD,WAAW,CAAC;EAC9BE,IAAI,EAAE,QADwB;EAE9BC,YAAY,EAAE;IACZC,QAAQ,EAAE,IADE;IAEZC,aAAa,EAAE,EAFH;IAGZC,QAAQ,EAAE,IAHE;IAIZC,MAAM,EAAE;EAJI,CAFgB;EAS9BC,QAAQ,EAAE;IACRC,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACjCD,KAAK,CAACN,QAAN,GAAiBO,MAAM,CAACC,OAAxB;IACD,CAHO;IAIRC,eAAe,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;MAClCD,KAAK,CAACL,aAAN,CAAoBS,IAApB,CAAyBH,MAAM,CAACC,OAAhC;IACD;EANO;AAToB,CAAD,CAA/B;AAoBA,OAAO,MAAM;EAAEH,cAAF;EAAkBI;AAAlB,IAAsCZ,WAAW,CAACc,OAAxD;AACP,eAAed,WAAW,CAACe,OAA3B"},"metadata":{},"sourceType":"module"}